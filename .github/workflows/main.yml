name: Deploy to Prod

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: 17

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Build Test and Validate
        working-directory: ./backend
        run: ./gradlew clean build test

  deploy:
    name: Build and analyze
    runs-on: ubuntu-latest

    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PROD_KEY" > ~/.ssh/ssh-key.pem
          chmod 600 ~/.ssh/ssh-key.pem
          cat >>~/.ssh/config <<END
          Host prod
            HostName $SSH_PROD_HOST
            User $SSH_PROD_USER
            IdentityFile ~/.ssh/ssh-key.pem
            StrictHostKeyChecking no
          END
        env:
          SSH_PROD_USER: ${{ secrets.PROD_SSH_USER }}
          SSH_PROD_KEY: ${{ secrets.PROD_SSH_KEY }}
          SSH_PROD_HOST: ${{ secrets.PROD_SSH_HOST }}

      - name: Clear docker
        run: ssh prod 'cd Xadrez && docker compose down && docker image prune -af && docker system prune -af'

      - name: Check out the source
        run: ssh prod 'eval `ssh-agent` && ssh-add && cd Xadrez && git fetch && git pull'

      - name: Start the server
        if: ${{ always() }}
        run: ssh prod 'cd Xadrez && docker compose up -d'