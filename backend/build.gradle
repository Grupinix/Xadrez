plugins {
    id 'java'
    id 'jacoco'
    id 'org.sonarqube' version "4.2.1.3168"
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
}

jacoco {
    toolVersion = "0.8.8"
}

sonarqube  {
    properties {
        property "sonar.projectName", "${project.name}"
        property "sonar.projectKey", "Grupinix_Xadrez"
        property "sonar.organization", "grupinix"
        property "sonar.projectVersion", "${project.version}"
        property "sonar.sources", "src/main/java"
        property "sonar.tests", "src/test/java"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.java.binaries", "build/classes"
        property "sonar.java.libraries", "build/libs"
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.verbose", "true"
        property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/jacocoTestReport.xml"
        property "sonar.junit.reportsPath", "build/test-results/test"
        property "sonar.exclusions", "**/br/com/eterniaserver/xadrez/rest/dtos/*"
        property "sonar.coverage.exclusions", "**/br/com/eterniaserver/xadrez/rest/**/*,**/br/com/eterniaserver/xadrez/exceptions/*,**/br/com/eterniaserver/xadrez/domain/entities/*,**/br/com/eterniaserver/xadrez/domain/enums/*,**/br/com/eterniaserver/xadrez/Constants.java,**/br/com/eterniaserver/xadrez/BackendApplication.java,**/br/com/eterniaserver/config/*"
    }
}

group = 'br.com.eterniaserver'
version = '0.8-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.yaml:snakeyaml:2.0'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.flywaydb:flyway-core'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()

    dependsOn "cleanTest"

    testLogging {
        events "passed", "skipped", "failed"
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

test.finalizedBy jacocoTestReport

tasks.named("sonarqube").configure {
    dependsOn test
}
